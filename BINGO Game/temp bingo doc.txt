<html>

<head>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="style.css" type="text/css" />
    <script src="../../jquerylib/dist/jquery.js"></script>
    <title>Bingo!</title>
</head>

<body>
    <h1>THE BINGO GAME</h1>
    <div>
        <table align="center" valign="middle">
            <tr>
                <td id="1" class="num"></td>
                <td id="2" class="num"></td>
                <td id="3" class="num"></td>
                <td id="4" class="num"></td>
                <td id="5" class="num"></td>
            </tr>
            <tr>
                <td id="6" class="num"></td>
                <td id="7" class="num"></td>
                <td id="8" class="num"></td>
                <td id="9" class="num"></td>
                <td id="10" class="num"></td>
            </tr>
            <tr>
                <td id="11" class="num"></td>
                <td id="12" class="num"></td>
                <td id="13" class="num"></td>
                <td id="14" class="num"></td>
                <td id="15" class="num"></td>
            </tr>
            <tr>
                <td id="16" class="num"></td>
                <td id="17" class="num"></td>
                <td id="18" class="num"></td>
                <td id="19" class="num"></td>
                <td id="20" class="num"></td>
            </tr>
            <tr>
                <td id="21" class="num"></td>
                <td id="22" class="num"></td>
                <td id="23" class="num"></td>
                <td id="24" class="num"></td>
                <td id="25" class="num"></td>
            </tr>
        </table>


        <button align="center" id="genRand">Generate random table</button>
    </div>
    <script>
        class Player {

            // bingo status of a player. 5 for a BINGO!!
            _bingoStatus = 0;

            // Wining status of a player. Only true if this._bingoStatus is 5
            win = (this._bingoStatus == 5) ? true : false;

            // Player name
            name = "default_name";

            // Set name
            constructor(n = "") {
                this.name = n;
            }

            currentPoint() {
                return this._bingoStatus;
            }

            addOne() {
                this._bingoStatus += 1;
            }
        }

        // Some extra function

        // Sort out duplicated elements in array
        function unique(val, idx, self) {
            return self.indexOf(val) === idx;
        }
        /*
            Use: var unqArr = [...].filter(unique);
        */

        // Check if a array is contained in another array
        /*
            ES6 one-lined answer:
            var mainArr = [...];
            var contArr = [...];

            var contain = contArr.every(
                i => mainArr.includes(i)
            );
        */


        // Initialization of global variables

        // Current player. Singleplayer only for testing
        var p = new Player('beta');
        // var p1 = new Player('player1');
        // var p2 = new Player('player2');


        // Ready state of a game
        var gameReady = false;
        var val = [], ids = [];
        var checked = [];
        // All of the possible diagonals, rows and columns for a letter
        // IMPORTANT
        var bingoArray = [
            [1, 2, 3, 4, 5],
            [6, 7, 8, 9, 10],
            [11, 12, 13, 14, 15],
            [16, 17, 18, 19, 20],
            [21, 22, 23, 24, 25],
            [1, 6, 11, 16, 21],
            [2, 7, 12, 17, 22],
            [3, 8, 13, 18, 23],
            [4, 9, 14, 19, 24],
            [5, 10, 15, 20, 25],
            [1, 7, 13, 19, 25],
            [5, 9, 13, 17, 21]
        ]

        // ID of slots in table
        /*
            1  2  3  4  5
            6  7  8  9  10
            11 12 13 14 15
            16 17 18 19 20
            21 22 23 24 25
        */

        $('#genRand').click(function () {

            // Change the "gameReady" state
            gameReady = true;

            // Create array for random dispose of number on the table
            for (let i = 1; i <= 25; i++) {
                val.push(i); ids.push(i);
            }

            // If both the arrays are not empty
            while (val.length && ids.length) {

                // ... then randomize/shuffle them
                val.sort(function () { return 0.5 - Math.random(); });
                ids.sort(function () { return 0.5 - Math.random(); });

                // Because the values in the arrays are random, so choosing the
                // last element of the array is like choosing a random number
                $('#' + ids.pop()).html(val.pop());
            }

            // Remove "clicked" attribute when reset the table
            $('.num').removeAttr('clicked');

            // Reset the 'checked' array
            checked = [];
            _bingoStatus = 0;
        });



        $('.num').click(function () {

            // Check the ready state of the game, preventing the player from clicking randomly
            if (gameReady) {
                // A clicked "button" will receive the "true" property 
                // for "clicked" attribute so that it cannot be clicked again,
                // avoiding error and cheating if possible. Idk...
                $(this).attr('clicked', true);

                // Get the id of the element that has just been checked
                var justChecked = parseInt($(this).attr('id'));

                // Add it to 'checked' array to find later
                checked.push(justChecked);
                checked = checked.filter(unique);

// IMPORTANT        
/*
For each square clicked, this will check if any array of the bingoArray
is a subarray of 'checked' array. If do, increase the point by 1

But what I want is that for example, the ids of the clicked squares are
[1, 6, 11, 16, 21, 2, 3, 4, 5] (first row and first column), the p.addOne()
should only be called twice because I only choose one row and one column

As the code runs, p.addOne() is called six times with the example above.

Moreover, if for example, I click on the bottom left square, the console should
only log out p.currentPoint() is 2 (if everything is perfect) or 6 (using my algorithm). 
The console here logs out 8 instead.
*/
                for (let i = 0; i < bingoArray.length; i++) {
                    if (
                        bingoArray[i].every(
                            j => checked.includes(j)
                        )
                    )
                        p.addOne();
                        console.log(bingoArray[i], checked, p.currentPoint());
                }
            }
        });
    </script>
</body>

</html>



p._bingoStatus = 0;
Your current implementation indicates that win is true when there are exactly 5 bingo's on the board. Is that what you really want? This is what I think you actually want

win = this._bingoStatus  > 0;




//console.log(i)
	if (i <= 4){
		return Math.floor(Math.random() * 8) + 1;
		console.log(`i = ${i} in first if`)
	}
	else if (i <= 9){
		return Math.floor(Math.random() * 8) + 9;
		console.log(`i = ${i} in second if`)
	}
	else if (i <= 13){
		return Math.floor(Math.random() * 8) + 17;
		console.log(`i = ${i} in third if`)
	}
	else if (i <= 18){
		return Math.floor(Math.random() * 8) + 25;
		console.log(`i = ${i} in fourth if`)
	}
	else if (i <= 23){
		return Math.floor(Math.random() * 8) + 33;
		console.log(`i = ${i} in fifth if`)
	}
	else{
		return Math.floor(Math.random() * 40) + 1;
	}
}








function CallBingoNumbers(){
	let displayNewNum = ""
	
	// do {
	// 	//get new Number 
	// 	let newBingoNum = getNewNum()
	// 	console.log(newNum)
	// }
	//check to see if we Called that number already
	// while (usedNums[newNum]);
	
	// usedNums[newNum] = true;
	
	let newBingoNum = getNewNum()
	
	//SWITCH to add B I N G O in front of the number
		if (newBingoNum <= 8){
			displayNewNum = "B" + newBingoNum
		}
		else if (newBingoNum <= 16){
			displayNewNum = "I" + newBingoNum
			console.log("testing if else")
		}
	  	else if (newBingoNum <= 24){
			displayNewNum = "N" + newBingoNum
		}
		else if (newBingoNum <= 32){
			displayNewNum = "G" + newBingoNum
		}
		else if (newBingoNum <= 40){
			displayNewNum = "O" + newBingoNum
		}

	document.getElementById("displayBingoNum").innerHTML = displayNewNum
	//document.getElementById("displayBingoNum").innerHTML = newBingoNum
	//function to change the color of the called number
	CalledBingoNums(newBingoNum)
	//document.getElementById(newBingoNum).bgColor = '#0facaa'




//  let x = 0
//  let tblNumRowID = ""
//  for (let  i = 1;  i < 41;  i++) {
//     if((i == 1) || (i == 9) || (i ==17) || (i == 25) || (i == 33)) {
//       x += 1
//       const tblNumRow = document.createElement('tr')
//       tblNumRow.classname = "bingoNumRow";
//       tblNumRow.id = "tblRow" + x ;
//       tblNumRowID = "tblRow" + x;
//       tblNumRow.style.backgroundColor = "DodgerBlue";
//       document.getElementById("bingoNumTable").appendChild(tblNumRow)
//       console.log(tblNumRow)
//     } 
         
//     const tblNum = document.createElement("td");
//     tblNum.classname = "bingoNums";
//     tblNum.id = i;
//     tblNum.innerText = i;
//     tblNum.style.fontSize = '27px'
//     tblNum.style.paddingLeft = '20px'
//     tblNum.style.paddingtop = "10px"
//     tblNum.style.width = '40px'
//     document.getElementById(tblNumRowID).appendChild(tblNum);
//     console.log(document.getElementById(i))
//  }

//  const td = document.querySelector('td')
//  td.addEventListener('click', (event) => {
//  event.target.style.backgroundColor = 'red'
//  })


 

var usedNums = new Array(40);
let callNum = new Array(40);

//Create a new card
newCard();

function btnClick(BingoNumID) {
	//change the color of the called number on the Bingo Card
	document.getElementById(BingoNumID).bgColor = '#00FF00'; 
}
function CalledBingoNums(NumCalled){
	//change the color of the number that was called on the bingo number table
	document.getElementById(NumCalled).bgColor = '#00FF00'
}

function numClear(){
	//get all of the elements of the bingoCardNum class (numbers that are on the bingo card)
	const bingoCardNums = document.querySelectorAll('.bingoCardNum');
	console.log(bingoCardNums)
	//get each element of the class and change the color back to default
	for(let bingoCardNum of bingoCardNums) {
		document.getElementById(bingoCardNum.id).bgColor = '#0facaa'
		}

	//get all of the elements of the bingoNums class  (all numbers that were called))
	const calledNums = document.querySelectorAll('.bingoNums');
	console.log(calledNums)
	//get each element of the class and change the color back to default
	 for(let calledNum of calledNums) {
	  	document.getElementById(calledNum.id).bgColor = 'DodgerBlue'
	 }

	 //clear the last displayed number
	 document.getElementById("displayBingoNum").innerHTML = ""
}

function newCard() {
	//Clear color from the numbers of the Bingo Card and call number tables
	numClear();

	//Starting loop through each square card
	for(var i=0; i < 24; i++) {  //<--always this code for loops. change in red
		setSquare(i);
	}
}

function setSquare(thisSquare) {
	var currSquare = "square"+thisSquare;
	var newNum;
	
	var colPlace =new Array(0,1,2,3,4,0,1,2,3,4,0,1,3,4,0,1,2,3,4,0,1,2,3,4);
	
	do {
		//newNum =(colPlace[thisSquare] * 15) + getNewNum() + 1;
		//newNum =(colPlace[thisSquare] * 1) + getNewNum();
		newNum = getNewNum(thisSquare)
		console.log(newNum)
	}
	while (usedNums[newNum]);
	
	usedNums[newNum] = true;

	document.getElementById(currSquare).innerHTML = newNum;
	//  document.getElementById(currSquare).className = "";
	//document.getElementById(currSquare).onmousedown = toggleColor;
}

function getNewNum(i) {
	//gets a random number starting at 1 going up to 40
	//console.log(i)
	if (i <= 4){
		return Math.floor(Math.random() * 8) + 1;
		console.log(`i = ${i} in first if`)
	}
	else if (i <= 9){
		return Math.floor(Math.random() * 8) + 9;
		console.log(`i = ${i} in second if`)
	}
	else if (i <= 13){
		return Math.floor(Math.random() * 8) + 17;
		console.log(`i = ${i} in third if`)
	}
	else if (i <= 18){
		return Math.floor(Math.random() * 8) + 25;
		console.log(`i = ${i} in fourth if`)
	}
	else if (i <= 23){
		return Math.floor(Math.random() * 8) + 33;
		console.log(`i = ${i} in fifth if`)
	}
	else{
		return Math.floor(Math.random() * 40) + 1;
	}
	
}

function anotherCard() {
	for(var i=1; i<usedNums.length; i++) {
	usedNums[i] = false;
	}
	
	newCard();
}

 function toggleColor(evt) {
 	if (evt) {
		var thisSquare = evt.target;
	}	else {
		var thisSquare = window.event.srcElement;
	}
	if (thisSquare.className == "") {
		thisSquare.className = "pickedBG";
	}	else {
		thisSquare.className = "";
	}
	checkWin();
}

//document.getElementById(currSquare).className = "pickedBG";


function checkWin() {
	var winningOption = -1;
	var setSquares = 0;
	var winners = new Array(31,992,15360,507904,541729,557328,1083458,2162820,4329736,8519745,8659472,16252928);


	// var bingoArray = [
	// 	[0, 1, 2, 3, 4],
	// 	[5, 6, 7, 8, 9],
	// 	[10, 11, 12, 13, 14],
	// 	[15. 16, 17, 18, 19],
	// 	[20, 21, 22, 23, 24],
	//	[1, 6, 11, 16, 21],
	// 	[2, 7, 12, 17, 22],
	// 	[3, 8, 13, 18, 23],
	// 	[4, 9, 14, 19, 24],
	// 	[0, 5, 10, 15, 20],
	// 	[0, 6, 12, 18, 24],
	// 	[4, 8, 12, 16, 20]
	// ]


	for (var i=0; i<24; i++) {
		var currSquare = "square" + i;
		//  if (document.getElementById(currSquare).className != "") {
		//  	document.getElementById(currSquare).className = "pickedBG";
		//  	setSquares = setSquares | Math.pow(2,i);
		//  }
	}

	for (var i=0; i<winners.length; i++) {
		if ((winners[i] & setSquares) == winners[i]) {
			winningOption = i;
		}
	}
	
	if (winningOption > -1) {
		for (var i=0; i<24; i++) {
			if (winners[winningOption] & Math.pow(2,i)) {
				currSquare = "square" + i;
				document.getElementById(currSquare).className = "winningBG";
			}
		}
	}
};

function CallBingoNumbers(){
	let displayNewNum = ""
	
	// do {
	// 	//get new Number 
	// 	let newBingoNum = getNewNum()
	// 	console.log(newNum)
	// }
	//check to see if we Called that number already
	// while (usedNums[newNum]);
	
	// usedNums[newNum] = true;
	
	let newBingoNum = getNewNum(60)
	
	//SWITCH to add B I N G O in front of the number
		if (newBingoNum <= 8){
			displayNewNum = "B" + newBingoNum
		}
		else if (newBingoNum <= 16){
			displayNewNum = "I" + newBingoNum
			console.log("testing if else")
		}
	  	else if (newBingoNum <= 24){
			displayNewNum = "N" + newBingoNum
		}
		else if (newBingoNum <= 32){
			displayNewNum = "G" + newBingoNum
		}
		else if (newBingoNum <= 40){
			displayNewNum = "O" + newBingoNum
		}

	document.getElementById("displayBingoNum").innerHTML = displayNewNum
	//document.getElementById("displayBingoNum").innerHTML = newBingoNum
	//function to change the color of the called number
	CalledBingoNums(newBingoNum)
	//document.getElementById(newBingoNum).bgColor = '#0facaa'

}






}







